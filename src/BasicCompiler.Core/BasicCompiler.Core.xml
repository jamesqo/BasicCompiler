<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BasicCompiler.Core</name>
    </assembly>
    <members>
        <member name="T:BasicCompiler.Core.AstNode">
            <summary>
            An mutable AST node that has access to its parent and its children.
            </summary>
            <content>
            Contains the debugger proxy for an <see cref="T:BasicCompiler.Core.AstNode"/>.
            </content>
        </member>
        <member name="T:BasicCompiler.Core.AstNode.DebuggerProxy">
            <summary>
            The debugger proxy for an <see cref="T:BasicCompiler.Core.AstNode"/>.
            </summary>
        </member>
        <member name="T:BasicCompiler.Core.AstVisitorException">
            <summary>
            An exception thrown when an operation by an <see cref="T:BasicCompiler.Core.IAstVisitor"/> fails.
            </summary>
        </member>
        <member name="M:BasicCompiler.Core.AstVisitorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BasicCompiler.Core.AstVisitorException"/> class.
            </summary>
        </member>
        <member name="T:BasicCompiler.Core.IAstTransform">
            <summary>
            Represents a transform operation to be applied on an AST.
            </summary>
        </member>
        <member name="M:BasicCompiler.Core.IAstTransform.CreateTransformer">
            <summary>
            Creates a new, mutable transformer used to inspect the AST.
            </summary>
            <returns>The transformer used to apply this transform.</returns>
        </member>
        <member name="T:BasicCompiler.Core.IAstTransformer">
            <summary>
            A mutable AST transformer that visits an AST and builds a new one.
            </summary>
        </member>
        <member name="P:BasicCompiler.Core.IAstTransformer.NewAst">
            <summary>
            Gets the new AST that was built.
            </summary>
        </member>
        <member name="M:BasicCompiler.Core.Lexer.Lex(System.String)">
            <summary>
            Converts a raw string into a list of tokens.
            </summary>
            <param name="input">The string to lex.</param>
            <returns>A list of tokens based on the string.</returns>
        </member>
        <member name="T:BasicCompiler.Core.NodeType">
            <summary>
            The semantic type of an AST node.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.NodeType.CallExpression">
            <summary>
            Indicates a call expression.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.NodeType.NumberLiteral">
            <summary>
            Indicates a number literal.
            </summary>
        </member>
        <member name="M:BasicCompiler.Core.Parser.Parse(System.Collections.Generic.IEnumerable{BasicCompiler.Core.Token})">
            <summary>
            Parses a list of tokens into an AST.
            </summary>
            <param name="tokens">The tokens to parse.</param>
            <returns>The parsed AST.</returns>
        </member>
        <member name="T:BasicCompiler.Core.TokenType">
            <summary>
            The semantic type of a token.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.TokenType.CloseParenthesis">
            <summary>
            Indicates a close-parenthesis token.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.TokenType.Identifier">
            <summary>
            Indicates an identifier token.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.TokenType.Number">
            <summary>
            Indicates a number token.
            </summary>
        </member>
        <member name="F:BasicCompiler.Core.TokenType.OpenParenthesis">
            <summary>
            Indicates an open-parenthesis token.
            </summary>
        </member>
    </members>
</doc>
